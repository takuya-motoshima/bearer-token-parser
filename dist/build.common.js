"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class e{static parseBearerToken(r){if(!r.authorization)return;const t=r.authorization.match(e.REG_TOKEN);return t?t[1]:void 0}}e.REG_TOKEN=/^Bearer\s+([A-Za-z0-9\-\._~\+\/]+)=*$/;exports.BearerParser=e,exports.BearerValidator=class{static validation(r){return r=Object.assign({realm:"",tokenCheckCallback:void 0,requestParameterCheck:void 0},r||{}),async(t,a,n)=>{if(!t.headers.authorization)return void a.header("WWW-Authenticate",`Bearer realm="${r.realm}", error="token_required"`).sendStatus(401);const o=e.parseBearerToken(t.headers);if(o){if(r.tokenCheckCallback){if(!(this.isAsyncFunction(r.tokenCheckCallback)?await r.tokenCheckCallback(o):r.tokenCheckCallback(o)))return void a.header("WWW-Authenticate",`Bearer realm="${r.realm}", error="invalid_token", error_description="Token cannot be authenticated"`).sendStatus(401)}if(r.requestParameterCheck){if(!(this.isAsyncFunction(r.requestParameterCheck)?await r.requestParameterCheck(t):r.requestParameterCheck(t)))return void a.header("WWW-Authenticate",`Bearer realm="${r.realm}", error="invalid_request"`).sendStatus(400)}n()}else a.header("WWW-Authenticate",`Bearer realm="${r.realm}", error="invalid_token", error_description="Token format error"`).sendStatus(401)}}static isAsyncFunction(e){return e&&e.constructor&&e.constructor===Object.getPrototypeOf((async function(){})).constructor}},exports.version="1.0.1";
